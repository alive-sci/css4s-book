[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Agent-based modeling for sustainability",
    "section": "",
    "text": "Welcome!\nThese are the course notes and manual for the Agent-based Modeling for Sustainability, the second course in the Computational Social Science for Sustainability (CSS4S) series at the Stanford Doerr School of Sustainability.\nThe course and the socmod library are under active development. If you have suggestions, questions, want to report typos, etc., please help me out and open an issue on the repo’s GitHub page.\nThis website and associated course content is and will always be free, licensed under the CC BY-NC-ND 4.0 License.\nThis online book is divided in two parts:\n\nNotes on the theory and application of agent-based modeling to promoting the social diffusion of sustainable practices through social learning and social influence. Continue on to the Introduction to read the Notes.\nTechnical manual that reviews the skills and techniques needed to develop agent-based models for sustainability and present the results in a scientific article.\n\nPlease select a chapter from the list to the left or continue to the Introduction.",
    "crumbs": [
      "Welcome!"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "1.1 Why agent-based models are useful\nIndigenous, local peoples of the South Pacific Islands and other coastal habitats have sustainably managed mangrove forests to dissipate storm surges and prevent erosion, mitigating potential costs of climate change since long before the anthropocene (Alongi 2002; Nalau et al. 2018; Pearson, McNamara, and Nunn 2020; McNamara et al. 2020). First peoples of western North America have similarly practiced prescribed burns to prevent destructive wildfires during times of drought for millennia (Eisenberg et al. 2019; Kolden 2019). Despite their long-known effectiveness, adaptive practices like these often fail to spread widely. Instead, international development agencies frequently advocate for the construction of seawalls, for example, even though seawalls can exacerbate flooding once breached and incur high maintenance costs (Piggott-McKellar et al. 2020). Inland forest management is beset by polarization among stakeholders (Swette, Huntsinger, and Lambin 2023), resulting in devastating wildfires burning a buildup of fuels or greenhouse gas-intensive clearcuts.\nHere we introduce what we dub the puzzle of diffusion: why do some effective, sustainable practices like mangrove forest management fail to diffuse broadly, while other less effective or even maladaptive practices become widespread (Figure 1.1)? To answer this, we answer some more basic questions along the way. First, how do people decide what to do, i.e., how does learning work? Second, what is the effect of identity on how well or how likely we are to learn from people of the same or different identity? Third, what is the effect of social structure, i.e., who knows whom, represented as a social network? Agent-based models are useful because they provide a framework for creating rigorous, mechanistic, concrete models of social diffusion of adaptations. They help us deal with the complexity of causation in the real world through strategic selection of causal input variables and model details, which, over several model time steps, lead to social emergent phenomena like the diffusion of climate change adaptations.\nThe focus of this course is developing agent-based models that can help us simplify complex combinations of cognitive and social factors to represent only the most relevant ones, and observe the effect of these on simulated outcomes such as the proportion of people adopting adaptive behaviors, or opinion extremism and polarization.\nAgent-based models (ABMs) provide a structured way to explore complex systems by simulating interactions between autonomous agents, i.e., simulated people. In sustainability contexts, ABMs offer a low-cost testbed for understanding how interventions might impact social dynamics and environmental outcomes. For example, Airoldi and Christakis (2024) demonstrated through regression analysis across that one method for selecting individuals targeted in a public health education campaign worked better than another. They studied over 20,000 individuals across Honduran villages of about 100 people each to reach their findings. Real-world verification of the efficacy of different intervention strategies is important. However, we can also use agent-based models to represent the diffusion of information in simulated populations where interactions are structured by model social networks. We can initialize thousands or millions of simulated villages in which this information could diffuse with different intervention strategies, and observe the distribution of the adoption of sustainable behaviors for each potential intervention strategy. We can then analyze which performed best in silico, which can be helpful if interventions will be taken to different contexts. In other worlds, we can use ABMs to deduce how different learning rules, group identities, and social structures shape sustainability outcomes generally, which can guide our selection of real-world intervention strategies.\nA typical ABM simulation cycle includes (Figure 1.2):\nWe will analyze and draw on several real-world empirical studies of interventions to develop our agent-based models that we in turn will use to simulate interventions in order to deduce which strategies are most effective for social interventions to promote sustainability, and why. A social intervention (or just intervention) for promoting sustainability is any concerted effort where those promoting a sustainable practice introduces information about how to perform that practice to a population. Deductive methods complement regression-based inferential or inductive strategies. Deductive strategies can explain which strategies are most effective and why in idealized, cost-free settings (cost-free at least compared to the cost of real-world social interventions at scale).\nLow-cost experimentation with simulated social interventions to promote sustainability are critical. Unless progress is accelerated towards we can expect to “have 575 million people living in extreme poverty, 600 million people facing hunger, and 84 million children and young people out of school. Humanity will overshoot the Paris climate agreement’s 1.5°C ‘safe’ guardrail on…temperature rise. And, at the current rate, it will take 300 years to attain gender equality” (Malekpour et al. 2023, 250). Accelerated transformations are required to reach goals necessary to avoid increasingly frequent and costly climate change disasters (United Nations 2023). It is not plausible to do real-world experiments at the global scale required to infer which strategies work best in which situations.\nIn this course we will focus on deducing how between different cognitive and social factors, or other initial conditions, affect simulated sustainability intervention outcomes. We will frame our studies in terms of sustainable development goals, but we will never fit our models to observations. Nonetheless, we will strive to develop models that are amenable to real-world interventions against which the models could be fit and predictions could be compared. It seems this is not done too much in practice yet in sustainability. However, some of our colleagues focused on studying basic processes that underlie cultural transmission do exactly this to explain experimental data and archaeological observations (Deffner et al. 2024), which thereby improves their theory, models, and understanding of cultural evolution in a theory-model-observation cycle. With more time and research effort, this cycle may become commonplace in sustainability.\nThe urgent need to understand how sustainable behaviors spread in order to develop effective interventions pressures social scientists to make social science more rigorous, reliable, and digestible by non-social scientists. In the rest of this Introduction we review cognitive and social theories of social learning, identity and influence, homophily and core-periphery network structures, and preview the remainder of the course material. For an overview of the course feel free to skip ahead to the Plan in table format.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#why-agent-based-models-are-useful",
    "href": "intro.html#why-agent-based-models-are-useful",
    "title": "1  Introduction",
    "section": "",
    "text": "Initializing agent populations and environmental conditions\nIterative steps where agents select partners, interact, and update behaviors based on outcomes and learning rules\nRepeating these steps until specific conditions or thresholds are met\nGenerating output data for analysis\n\n\n\n\n\n\n\nFigure 1.2: Agent-based modeling simulation cycle.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#social-learning-strategies",
    "href": "intro.html#social-learning-strategies",
    "title": "1  Introduction",
    "section": "1.2 Social learning strategies",
    "text": "1.2 Social learning strategies\nHuman kind is set apart by powerful learning and reasoning capabilities (Witt et al. 2024) that enable cultural transmission and accumulation of technologies and practices no other species matches (Henrich 2015). For our sustainability models, we only need simple models of cognition and learning. It would never be practical to do psychological or cognitive tests in the context of sustainability interventions that targets large populations, for one thing, so we could never compare detailed cognitive assumptions or predictions with reality. For our purposes we will consider three general classes of learning strategy:\n\nSuccess-biased learning: Individuals are more likely to adopt behaviors perceived to be successful or beneficial.\nFrequency-biased learning: Individuals adopt behaviors because others are already doing them, creating a conformity effect.\nContagion: Individuals copy behaviors simply by observing others performing them.\n\nIn the mangrove versus seawall example, success-biased learning might favor seawalls if influential external actors, who seem successful or wealthy, advocate for them, even if seawalls are ultimately less effective. Mangrove forests might become widely adopted if, on the other hand, frequency-biased learning predominates and many communities have adopted that method.\n\n1.2.1 Formal social learning models with example\nTo make this more concrete, we formalize (i.e., give formulas for) these three learning strategies as follows using the example in Figure 1.3. In the example, there is one focal agent who is the one doing the observing/learning, labelled with the ID 1, and three social network neighbors with IDs 2, 3, and 4. The focal agent is deciding whether or not to install residential solar. One of his neighbors has installed it, 2. Based on 1’s perception, 2 is the wealthiest, represented by four dollar symbols. 3 is perceived to have one dollar and 4 has two dollars.\n\n\n\n\n\n\nFigure 1.3: Agent 1, the focal agent, is considering whether to install residential solar. The probability agent 1 installs residential solar depends on its social learning strategy.\n\n\n\n\n1.2.1.1 Success-biased learning\nIn success-biased learning, learners first choose an interaction partner/teacher randomly weighted by observed fitness of their neighbors, which is a generic term for wealth, power, status, etc. In general for this case, the probability that learner \\(i\\) chooses teacher \\(j\\) is\n\\[\n\\Pr(i \\text{ chooses } j) = \\frac{f_j}{\\sum_{k \\in n_i} f_k}.\n\\]\nThe probability that \\(i\\) adopts \\(A\\) is then the sum of the probabilities of choosing each neighbor performing \\(A\\) (contained in the set \\(m_i\\)),\n\\[\n\\Pr(i \\text{ adopts } A) = \\frac{\\sum_{j \\in m_i} f_j}{\\sum_{k \\in n_i} f_k}.\n\\]\nIn our example, only one neighbor installed residential solar with a fitness (i.e. wealth in this example) of 4, while the others have finess 1 and 2. Therefore, \\(\\Pr(1 \\text{ adopts } A) = \\frac{4}{7}\\).\n\n\n1.2.1.2 Frequency-biased learning\nIn frequency-biased learning there is no interaction partner or teacher chosen. The probability of adoption is only given by the relative frequency of each behavior. The general expression is\n\\[\n\\Pr(i \\text{ adopts } A) = \\frac{|m_i|}{|n_i|}.\n\\]\nIn our example, then, the probability of installing residential solar under frequency-biased learning is \\(\\frac{1}{3}\\).\n\n\n1.2.1.3 Contagion learning\nIn the contagion learning model, the focal agent’s (i.e., the learner’s) teacher (i.e., interaction partner) is chosen at random. Then, the learner adopts the teacher’s behavior with probability \\(\\alpha\\), the adoption rate. In this case, then, the probability that 1 adopts residential solar is\n\\[\n\\Pr(1 \\text{ adopts solar}) = \\alpha \\Pr(1 \\text{ selects 2 as teacher}) = \\alpha \\frac{1}{3}.\n\\]\nMore generally, for focal agent \\(i\\) with the set of neighbors \\(n_i\\) (\\(n_1 = \\{2, 3, 4\\}\\) in the example), where \\(m_i\\) is the set of neighbors who have adopted the adaptive behavior (\\(m_i = \\{2\\}\\) in the example). We call the adaptive behavior \\(A\\). The general probability of adoption in contagion learning is therefore\n\\[\n\\Pr(i \\text{ adopts } A) = \\frac{\\alpha |m_i|}{|n_i|},\n\\]\nwhere the \\(| \\cdot |\\) operator counts the number of elements in a set.\n\n\n1.2.1.4 Combinations of learning models\nThere is no reason different learning models cannot be combined. The software we will use in this class, socmod, provides flexibility to the user to define their own learning models. The simplest combination of the three learning models above is to add an adoption rate to either frequency- or success-biased learning. In this approach, one could call the behavior selected by the models above could be considered prospective or candidate behavior to learn, then is actually learned with probability \\(\\alpha\\).\nFor another potentially useful modification, \\(\\alpha\\) could be defined at the individual level, say \\(\\alpha_i\\), or for dyads (i.e., a pair of interacting individuals) , \\(\\alpha_{ij}\\), where \\(i\\) is still the focal agent learner, but we have added \\(j\\), representing the selected teacher.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#identity-and-influence",
    "href": "intro.html#identity-and-influence",
    "title": "1  Introduction",
    "section": "1.3 Identity and Influence",
    "text": "1.3 Identity and Influence\nGroup identity critically influences social learning. Neuroscience research demonstrates that our brains distinctly respond to individuals identified as part of our group (Cikara and Van Bavel 2014), as revealed through fMRI neural imaging (Figure 1.4). This ability likely evolved because when humans first emerged about two million years ago, it was much more important for survival to be able to rapidly identify whether someone was a friend or foe based on group markers. Although group membership can affect how we respond to information learned from others, group membership itself is quite plastic, meaning who belongs to which group can be rapidly reconfigured. For example, neural signals of race-based group perception was observed to be suppressed and overridden when individuals were in mixed-race groups created by experimenters that competed against other mixed-race groups in an psychological experimental task (Van Bavel, Packer, and Cunningham 2008).\n\n\n\n\n\n\nFigure 1.4: Figure 1 reorganized with original caption from Cikara and Van Bavel (2014)\n\n\n\nStudies further show that group identity can strongly influence behavioral choices. For instance, experimental evidence reveals people resist adopting beneficial behaviors if associated with opposing political identities (Ehret et al. 2022), emphasizing how identity can create substantial barriers to sustainability. This general effect of group membership interfering with learning is called outgroup aversion (Smaldino et al. 2017).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#social-networks-homophily-and-core-periphery-structure",
    "href": "intro.html#social-networks-homophily-and-core-periphery-structure",
    "title": "1  Introduction",
    "section": "1.4 Social networks, homophily, and core-periphery structure",
    "text": "1.4 Social networks, homophily, and core-periphery structure\nSocial structure can significantly impact behavioral diffusion, especially in core-periphery configurations. Core-periphery networks emerge as a response to risk and uncertainty, e.g., in food sharing networks (Ready and Power 2018), so they are hypothesized to also be important in climate change adaptation transmission networks (Jones, Ready, and Pisor 2021). Core-periphery networks can be created by setting appropriate group sizes and homophily levels in homophily network models (Turner et al. 2023) or specifying certain connectivity probabilities to the stochastic block matrix algorithm for creating structured random graphs (Rombach et al. 2014; Milzman and Moser 2023). Homophily is the measure of how much more likely an individual is to socially connect within their own group versus with a member of a different group. Homophily can range from -1 to +1, where -1 represents no within-group connections and only between-group connections (i.e., anti-homophily); 0 represents an equal probability of within- and between-group connections, and +1 represents only within-group connections. We will define homophily as either a global or group-level variable, though homophily could vary individually as well. There are two types of homophily:\n\nChoice Homophily: Individuals actively prefer interacting with similar others.\nInduced Homophily: Social interactions limited by historical or external conditions like geography, profession, birthplace, etc.\n\nThese structural elements can significantly limit the diffusion of sustainable practices from peripheries, like the mangrove management on smaller islands, to central cores. However, as colleagues and I have showed, this core-periphery structure, defined by moderately high majority-group homophily can actually promote the diffusion of adaptations, provided the adaptation is practiced by the minority group (Turner et al. 2023), as is the case for mangrove forest management or prescribed burns. Formal definitions of homophily and core-peripheriness will be given in the networks chapter.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#course-outline-in-the-context-of-sustainable-development",
    "href": "intro.html#course-outline-in-the-context-of-sustainable-development",
    "title": "1  Introduction",
    "section": "1.5 Course outline in the context of sustainable development",
    "text": "1.5 Course outline in the context of sustainable development\nThe agent-based modeling approach developed in this course provides a structured way to test the effectiveness of social interventions aimed at promoting sustainable behavior. By formalizing and testing our assumptions about social dynamics, agent-based modeling supports better design and evaluation of policies and programs aimed at driving real-world change. This deductive, experimental approach allows us to explore how cooperation, coordination, identity, homophily, and influence affect the likelihood that beneficial behaviors will spread. In the coming chapters and associated problem sets we will analyze social learning of behaviors and social influence of opinions in various contexts.\nThe goal is to build up a repertoire of agent-based modeling techniques for incorporating different assumptions about how social learning or influence work, whether group structure is important to these processes, and for modeling social network structure. This repertoire can then be applied to sustainability contexts of interest to understand how different sustainability intervention strategies, such as who should learn about sustainable adaptations first in an educational intervention or how best to assist stakeholder deliberations to reduce opinion polarization that can derail collective adaptation. To choose model components wisely requires an understanding of elements of sustainability, cognitive and social science, network science, and software engineering.\nThe UN Sustainable Development Goals help us focus and organize our work by providing concrete goals for evaluating progress towards sustainable development for all Figure 1.5. These goals include targets for institutional development that promotes basic conditions for human thriving (justice, equality, education, public health, and no poverty) so as to assemble and enable a critical mass of people to participate bringing about sustainable development. People cannot participate in sustainability if they suffer in poverty, from illness, or subjugation by authoritarians–all but the most zealous environmental defenders will fight on when these basic needs are unmet. Since progress has been slower than necessary.\nSustainability, then, has several different dimensions, all of which contribute to climate action and environmental protection. I have organized these goals into a coding system called the vIBE system: vibrant Institutions support Basic human needs of people who protect the Environment. All 17 goals and the organization system are illustrated in Figure 1.5. Organizing and connecting our work to has two benefits. First, it helps us identify which cognitive and social factors are at work in different sustainability foci. Second, it expands the corpus of existing research on which we draw to consolidate our social and cognitive theories of behavior change that we will apply to sustainability interventions.\n\n\n\n\n\n\nFigure 1.5: The 17 United Nations Sustainable Development Goals (SDGs) can be organized into groups for vibrant Institutions (Group I) that provide Basic needs (Group B) required for people to actively work towards Environmental and Ecological protection (Group E)–we dub this the vIBE coding of the sustainable development goals.\n\n\n\n\n\n\n\nAiroldi, Edoardo M., and Nicholas A. Christakis. 2024. “Induction of social contagion for diverse outcomes in structured experiments in isolated villages.” Science 384 (6695). https://doi.org/10.1126/science.adi5147.\n\n\nAlongi, Daniel M. 2002. “Present state and future of the world’s mangrove forests.” Environmental Conservation 29 (3): 331–49. https://doi.org/10.1017/S0376892902000231.\n\n\nCikara, Mina, and Jay J. Van Bavel. 2014. “The Neuroscience of Intergroup Relations: An Integrative Review.” Perspectives on Psychological Science 9 (3): 245–74. https://doi.org/10.1177/1745691614527464.\n\n\nDeffner, Dominik, Natalia Fedorova, Jeffrey Andrews, and Richard McElreath. 2024. “Bridging theory and data: A computational workflow for cultural evolution.” Proceedings of the National Academy of Sciences of the United States of America 121 (48): 1–11. https://doi.org/10.1073/pnas.2322887121.\n\n\nEhret, Sönke, Sara M. Constantino, Elke U. Weber, Charles Efferson, and Sonja Vogt. 2022. “Group identities can undermine social tipping after intervention.” Nature Human Behaviour. https://doi.org/10.1038/s41562-022-01440-5.\n\n\nEisenberg, Cristina, Christopher L. Anderson, Adam Collingwood, Robert Sissons, Christopher J. Dunn, Garrett W. Meigs, Dave E. Hibbs, et al. 2019. “Out of the Ashes: Ecological Resilience to Extreme Wildfire, Prescribed Burns, and Indigenous Burning in Ecosystems.” Frontiers in Ecology and Evolution 7 (November): 1–12. https://doi.org/10.3389/fevo.2019.00436.\n\n\nHenrich, Joseph. 2015. The secret of our success. Princeton University Press.\n\n\nJones, James Holland, Elspeth Ready, and Anne C. Pisor. 2021. “Want climate-change adaptation? Evolutionary theory can help.” American Journal of Human Biology 33 (4): 1–17. https://doi.org/10.1002/ajhb.23539.\n\n\nKolden, Crystal A. 2019. “We’re not doing enough prescribed fire in the western united states to mitigate wildfire risk.” Fire 2 (2): 1–10. https://doi.org/10.3390/fire2020030.\n\n\nMalekpour, Shirin, Cameron Allen, Ambuj Sagar, Imme Scholz, Åsa Persson, Jaime J. Miranda, Therese Bennich, et al. 2023. “What scientists need to do.” Nature 621 (September): 250–54.\n\n\nMcNamara, Karen E., Rachel Clissold, Ross Westoby, Annah E. Piggott-McKellar, Roselyn Kumar, Tahlia Clarke, Frances Namoumou, et al. 2020. “An assessment of community-based adaptation initiatives in the Pacific Islands.” Nature Climate Change 10 (7): 628–39. https://doi.org/10.1038/s41558-020-0813-1.\n\n\nMilzman, Jesse, and Cody Moser. 2023. “Decentralized core-periphery structure in social networks accelerates cultural innovation in agent-based model.” In Proc. Ofthe 22nd International Conference on Autonomous Agents and Multiagent Sys- Tems (AAMAS 2023). http://arxiv.org/abs/2302.12121.\n\n\nNalau, Johanna, Susanne Becken, Johanna Schliephack, Meg Parsons, Cilla Brown, and Brendan Mackey. 2018. “The role of indigenous and traditional knowledge in ecosystem-based adaptation: A review of the literature and case studies from the Pacific Islands.” Weather, Climate, and Society 10 (4): 851–65. https://doi.org/10.1175/WCAS-D-18-0032.1.\n\n\nPearson, Jasmine, Karen E. McNamara, and Patrick D. Nunn. 2020. iTaukei Ways of Knowing and Managing Mangroves for Ecosystem-Based Adaptation. Springer International Publishing. https://doi.org/10.1007/978-3-030-40552-6_6.\n\n\nPiggott-McKellar, Annah E, Patrick D Nunn, Karen E McNamara, and Seci T Sekinini. 2020. “Dam(n) Seawalls: A Case of Climate Change Maladaptation in Fiji.” In Managing Climate Change Adaptation in the Pacific Region, edited by W. Leal Filho, 69–84. Springer. https://doi.org/10.1007/978-3-030-40552-6.\n\n\nReady, Elspeth, and Eleanor A. Power. 2018. “Why wage earners hunt: Food sharing, social structure, and influence in an arctic mixed economy.” Current Anthropology 59 (1): 74–97. https://doi.org/10.1086/696018.\n\n\nRombach, M. Puck, Mason A. Porter, James H. Fowler, and Peter J. Mucha. 2014. “Core-periphery structure in networks.” SIAM Journal on Applied Mathematics 74 (1): 167–90. https://doi.org/10.1137/120881683.\n\n\nSmaldino, Paul E, Marco A Janssen, Vicken Hillis, Jenna Bednar, Paul E Smaldino, Marco A Janssen, Vicken Hillis, and Jenna Bednar. 2017. “Adoption as a social marker: Innovation diffusion with outgroup aversion.” The Journal of Mathematical Sociology 41 (1): 26–45. https://doi.org/10.1080/0022250X.2016.1250083.\n\n\nSwette, Briana, Lynn Huntsinger, and Eric F. Lambin. 2023. “Collaboration in a polarized context: lessons from public forest governance in the American West.” Ecology and Society 28 (1). https://doi.org/10.5751/ES-13958-280129.\n\n\nTurner, Matthew A., Alyson L. Singleton, Mallory J. Harris, Ian Harryman, Cesar Augusto Lopez, Ronan Forde Arthur, Caroline Muraida, and James Holland Jones. 2023. “Minority-group incubators and majority-group reservoirs support the diffusion of climate change adaptations.” Philosophical Transactions of the Royal Society B: Biological Sciences 378 (1889). https://doi.org/10.1098/rstb.2022.0401.\n\n\nUnited Nations. 2023. “Times of crisis, times of change: Science for accelerating transformations to sustainable development.” https://sdgs.un.org/sites/default/files/2023-09/FINAL GSDR 2023-Digital -110923_1.pdf.\n\n\nVan Bavel, Jay J, Dominic J Packer, and William A Cunningham. 2008. “The Neural Substrates of In-Group Bias.” Psychological Science 19 (11): 1131–39.\n\n\nWitt, Alexandra, Wataru Toyokawa, Kevin N. Lala, Wolfgang Gaissmaier, and Charley M. Wu. 2024. “Humans flexibly integrate social information despite interindividual differences in reward.” Proceedings of the National Academy of Sciences 121 (39). https://doi.org/10.1073/pnas.2404928121/-/DCSupplemental.Published.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "technical-intro.html",
    "href": "technical-intro.html",
    "title": "2  Computational techniques for agent-based modeling",
    "section": "",
    "text": "2.1 Data collection types in R\nThis chapter introduces agent-based modeling in socmod starting with basic functional and object-oriented programming in R. It therefore builds on an assumed knowledge of R basics which can be gained by studying, for example, Hands-On Programming with R or other basic R tutorial introductions.\nTo model social behavior it helps to have intuitive software tools grounded in an empirically-motivated, self-consistent scientific theory. socmod provides those tools, but to put it to best use it’s helpful to know how it works, especially for people used to using R in a data science context. Many of the same tools are transferable, especially declarative/functional programming, as is used and encouraged by the tidy approach in R for Data Science.\nTo create simulations that generate social behavior we have to go beyond tabular representations of the world to more complex representations of people and their interactions that can be measured. These measurements are recorded in a standard tabular format, e.g., CSV, which can then be analyzed using tidy/R for Data Science strategies.\nIn agent-based modeling, we create software representations of simulated people, i.e. agents, or other interacting entities, including the agents’ environment. Object-oriented programming is the natural choice for software design in this case because it provides a structure for defining custom objects like socially interacting agents. An object is one bit of data that could be a number or character type, but could also be something more complicated. In object-oriented programming we define custom classes that specify various data fields and function methods for maintaining and modifying the state of objects. The fields and methods of a class therefore are sets of related data and functions to represent things in the world.\nTo summarize, objects are a way to track and modify the state of different software entities. We can create simulations of real-world systems by defining custom object types called classes whose state and behaviors are modeled on relevant real-world features and behaviors.\nIn socmod, we define custom R objects for agent-based models of social behavior using the R6Class method that creates a new object type, i.e., a new class. We use tidy-style functional programming where helpful to represent model features and dynamics.\nIn the remainder of this chapter, I will first review variable assignment and data structures in R including vectors, lists, data.frames, and tibbles. We then review relevant topics in functional programming, then demonstrate how to create custom classes in R with the library R6. This tutorial then closes with a demonstration of a simple four-agent agent-based model of social behavior, kept simple to highlight the functional and object-oriented design patterns in socmod, representing Agent, an AgentBasedModel, and Trialclasses defined using the R6Class function.\nIn R, there is a hierarchy of data collection types that are necessary to know about for functional programming, which often involves applying a function across every element of a collection of data. Data collections include vectors, lists, data.frames, and tibbles, which we’ll cover here.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Computational techniques for agent-based modeling</span>"
    ]
  },
  {
    "objectID": "technical-intro.html#data-collection-types-in-r",
    "href": "technical-intro.html#data-collection-types-in-r",
    "title": "2  Computational techniques for agent-based modeling",
    "section": "",
    "text": "2.1.1 Collections of basic data types\nIn computer science, a collection is an abstract data type that organizes and stores instances of other data types. In R, the most basic data types are numbers (e.g., double or integer) and text, whose data type is character in R whether it’s a single character or several:\n\nprint(typeof('c'))\n\n[1] \"character\"\n\nprint(typeof(\"social science is kewl\"))\n\n[1] \"character\"\n\n\n\n\n2.1.2 Vectors\nR vectors are defined using the c() function, e.g., vec &lt;- c(0, 0, 1). The data type of all vector elements must be the same. This is enforced by R coercing data to different types, for example:\n\nprint(c(0, 0, 1))\n\n[1] 0 0 1\n\nprint(c(0, 0, \"yo\"))\n\n[1] \"0\"  \"0\"  \"yo\"\n\n\nWe index vectors using single square brackets, with R indexing starting from 1:\n\nvec &lt;- c(1, 2, 3, 4, 5) # equiv to vec &lt;- 1:5 or seq(1, 5)\nprint(vec[1])\n\n[1] 1\n\nprint(vec[length(vec)])\n\n[1] 5\n\n\n\n\n2.1.3 Lists\nIf one wants to keep elements of different types in a single collection, use the R list:\n\nl &lt;- list(0, 542, \"yo\")\nprint(l)\n\n[[1]]\n[1] 0\n\n[[2]]\n[1] 542\n\n[[3]]\n[1] \"yo\"\n\n\nNote the visual representation has changed on printout. We now need to use double-square brackets to index list elements themselves:\n\nprint(l[[3]])\n\n[1] \"yo\"\n\n\nIf we leave off one of the square brackets we effectively get a sub-list with just one element:\n\nprint(l[3])\n\n[[1]]\n[1] \"yo\"\n\n\nThis is useful if you want to create a new sub-list with more than one element:\n\nprint(l[c(2, 3)])\n\n[[1]]\n[1] 542\n\n[[2]]\n[1] \"yo\"\n\n\n\n\n2.1.4 Named lists\nNamed lists are the primary key-value store in R, just like dict in Python. It allows us to label entries of the list and access them using double square brackets with the character name or using the $ access operator:\n\nnamed_l &lt;- list(a = c(0, 5, 6), b = c(7, 8, 9))\nprint(named_l$a == named_l[[\"a\"]]) # compares element-by-element\n\n[1] TRUE TRUE TRUE\n\nprint(all(named_l$b == named_l[[\"b\"]]))\n\n[1] TRUE\n\n\n\n\n2.1.5 tibble (and data.frame)\nBoth the tibble and data.frame classes represent tabular data, meaning data that can be represented in table format, e.g., in comma- or tab-separated value format. There are some subtle differences listed below, but we’ll use tibble for representing our tables.\nTibbles are like fancy lists that have special properties that make data manipulation more efficient. The details of how this works aren’t super important at this point. The important thing to know is how one can initialize tibbles and access tibble columns similarly to lists, as shown in the following example:\n\ntbl &lt;- tibble::tibble(a = c(0, 5, 6), b = c(7, 8, 9))\nprint(tbl$a)\n\n[1] 0 5 6\n\nprint(tbl[[\"b\"]])\n\n[1] 7 8 9\n\n\nUsing tibbles ensures that data manipulation and analysis using the tidyverse will work as expected. For example, the tidyverse provides functions for analyzing different groups of data within a larger dataset. This is a common data analysis pattern called split-apply-combine, which in the tidyverse translates to group-by and summarise when using the dplyr library. For example, we can calculate the mean of measurements in “experimental” and “control” conditions in some fake data:\n\nobservations &lt;- tibble::tibble(\n  condition = c(\"experimental\", \"experimental\", \"control\", \"control\"),\n  measurement = c(13.5, 14.6, 3.4, 5.4)\n)\n\nmean_measurement_tbl &lt;- \n  observations %&gt;% \n  dplyr::group_by(condition) %&gt;% \n  dplyr::summarise(mean_measurement = mean(measurement))\n\nprint(mean_measurement_tbl)\n\n# A tibble: 2 × 2\n  condition    mean_measurement\n  &lt;chr&gt;                   &lt;dbl&gt;\n1 control                   4.4\n2 experimental             14.0\n\n\n\n\n2.1.6 Difference between data.frame and tibble\nThe tibble library provides a table data representation (also called tibble) that is a bit more flexible and intuitive than the R built-in data.frame. One reason I prefer tibbles is because traditional data.frames automatically convert strings to factors unless you tell them not to. Tibbles don’t, so you’re never surprised.\nColumn naming is also more flexible with tibbles. A data.frame requires syntactically valid R names, while tibbles can handle column names that include spaces or even non-standard characters. I often use this feature to use column names like Mean adaptation success that print nicely when used as labels in ggplot.\nFinally, tibble operations always return a tibble. For example, if df were a data.frame, the operation df[, 1] would return a vector by default. If it were a tibble it would return another tibble, making behavior more predictable in data analysis pipelines.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Computational techniques for agent-based modeling</span>"
    ]
  },
  {
    "objectID": "technical-intro.html#functional-programming",
    "href": "technical-intro.html#functional-programming",
    "title": "2  Computational techniques for agent-based modeling",
    "section": "2.2 Functional programming",
    "text": "2.2 Functional programming\nFunctional programming is especially useful for writing code that applies the same function to several inputs, but wants to leave it up to the user to specify exactly which function should be applied. In socmod we pass functions as arguments to other functions to specify how agents pick their interaction partners (i.e., teachers in a learning context) and how social learning works. Here are some simple examples demonstrating the key concepts and techniques of functional programming that could help with socmod programming.\n\n2.2.1 Higher-order functions: functions with function arguments\nIn R, and other programming languages supporting the functional style, one can treat functions like any other data and pass it as an argument to other functions. A function that accepts a function as an argument is called a higher-order function. Here is a simple example of a higher order function that takes some data as a first argument and applies the function f to that data twice, putting the result of each calculation in a two-element vector.\n\nrepeat_2_higher_order_func &lt;- function(data, f) {\n  return (c(f(data), f(data)))\n}\n\nBelow we call this higher order function by providing data=2 as the first argument and an anonymous function as the second argument, which can be written using \\(arg) { ...function body... } syntax:\n\n# \\(x) {...} is equivalent to function(x) { ... }; these are \n# anonymous functions.\n# Expecting to return c(4, 4)\nrepeat_2_higher_order_func(data = 2, f = \\(x) { return (x * 2) }) \n\n[1] 4 4\n\n\nThe above is the representation of a vector printed to screen, so we see that our expectations were matched.\n\nc(4, 4)\n\n[1] 4 4\n\n\n\n\n2.2.2 map: a common, useful higher-order function used often in socmod\nOne of the most useful and common higher-order functions is the map function. This function maps a function, denoted .f below, onto every element in a collection, denoted .x. This notation is from the map family of functions in the purrr library for tidy functional programming.\n\nlibrary(purrr)\n\nHere is an example of mapping an anonymous function that multiplies its input by 3 onto a vector with entries 2 and 8:\n\n# Now get we use map_vec that applies .f to every element of .x,\n# expecting the following to return a vector with elements 3*2 \n# and 3*8, i.e., c(6, 24).\npurrr::map_vec(.x = c(2, 8), .f = \\(x) { return(3 * x)})\n\n[1]  6 24\n\n\nIf we want to apply a function that takes two variables, the value and index of an element in a collection, we can use the imap family of functions as follows to return a vector that contains the original element multiplied by its place in the input vector:\n\ninput_vec &lt;- c(2, 5050, 6)\npurrr::imap_vec(input_vec, \\(el, idx) { return (idx * el) })\n\n[1]     2 10100    18",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Computational techniques for agent-based modeling</span>"
    ]
  },
  {
    "objectID": "technical-intro.html#custom-objects-r6-classes-in-socmod",
    "href": "technical-intro.html#custom-objects-r6-classes-in-socmod",
    "title": "2  Computational techniques for agent-based modeling",
    "section": "2.3 Custom objects: R6 classes in socmod",
    "text": "2.3 Custom objects: R6 classes in socmod\nClasses are ways to encapsulate diverse distinct, but related, processes, behaviors, data, attributes, and other types of information in a single object, i.e., a software representation of an instance of that entity. R6 is a library for creating our own custom classes that serve as an abstract template that specifies what distinguishes different types of objects/entities. Below we show first how to create a new agent, i.e., a new instance of the Agent class that is provided by socmod. After that is a fun example of how we can design a different social behavioral model, one of football/soccer matches. We write classes for players and teams and develop a play_match(team1, team2) function that pits two teams against each other.\n\n2.3.1 The Agent class in socmod\nBelow we create a new instance of the Agent class using the class constructor, the function written socmod::Agent$new() below that creates a new instance of the class.\n\na1 &lt;- socmod::Agent$new(1, name = \"Matt\", \n                        behavior = \"Adaptive\", \n                        fitness=1e6)\n\nWe can use the access operator, $ in R, to access the fields (i.e., attributes) of agent a1 like so:\n\nprint(a1$get_fitness())\n\n[1] 1e+06\n\nprint(a1$get_name())\n\n[1] \"Matt\"\n\nprint(a1$get_id())\n\n[1] 1\n\nprint(a1$get_behavior())\n\n[1] \"Adaptive\"\n\n\nWe can also use purrr::map functions over neighbors like so:\n\n# Assign neighbors to a1.\n\na1$set_neighbors(c(\n  socmod::Agent$new(id = 2, name = \"n2\"),\n  socmod::Agent$new(id = 3, name = \"n3\")\n))\n\n# Get the list of neighbors back to check it worked.\nneighbors &lt;- a1$get_neighbors()\nprint(class(neighbors))  # should be [1] \"Neighbors\" \"R6\"\n\n[1] \"Neighbors\" \"R6\"       \n\n# Neighbors$map() returns a list...\nneighbor_names &lt;- neighbors$map(\\(n) n$get_name())\nprint(neighbor_names)\n\n[[1]]\n[1] \"n2\"\n\n[[2]]\n[1] \"n3\"\n\n# ...use `unlist` to convert it to a vector:\nprint(unlist(neighbor_names))\n\n[1] \"n2\" \"n3\"\n\n\n\n\n2.3.2 Exercise: design and define classes from scratch\nIn class we started creating our model of a soccer player agent called Footballer, defined below. We ran out of time at the end of class to write methods for Footballer, i.e., ways that a football player could interact with the world, or that the world could act upon a soccer player. However we only had time to create a stub for two methods. A stub is a minimal chunk of code that does very little to nothing, but doesn’t get in the way by causing errors or anything like that. It enables us to document our plans for future development in the exact place where it would happen in the code.\nBelow we have stubs for score_goal and get_penalty methods for in-game behaviors. Other possibilities could include get_traded that would change its team and perhaps get_signed for cases where a player is a free agent.\n\nlibrary(R6)\n\nFootballer &lt;- R6Class(\"Footballer\",\n                        \n  public = list(\n    # Listing attributes as fields and \n    # setting to zero for their definition.\n    speed = 0.0,  # units of max km/h\n    accuracy = 0.0, # probability of scoring on a shot\n    market_value = 0.0, # \n    aggressiveness = 0.0, # units of penalties per match\n    team = \"\",\n    \n    initialize = function(speed = 15, \n                          accuracy = 0.2, market_value = 1e6, \n                          aggressiveness = 0.5, \n                          team = \"Free agent\") {\n      self$speed = speed\n      self$accuracy = accuracy\n      self$market_value = market_value\n      self$aggressiveness = aggressiveness\n      self$team = team\n    },\n    \n    # Stub two SoccerPlayer class methods...\n    # ...one for scoring a goal in a game...\n    scored_goal = function() {\n      return (ifelse(runif(1) &lt; self$accuracy, 1, 0))\n    },\n    # ...and one for getting a penalty in a game.\n    get_penalty_on_play = function() {\n      return (runif(1) &lt; self$aggressiveness)\n    }\n  )\n)\n\nTeam &lt;- R6Class(\"Team\",\n                \n  public = list(\n    name = \"\",\n    players = list(),\n    wins = 0,\n    ties = 0,\n    payroll = 0,\n    games_played = 0,\n    \n    # Team name is required, with players optionally specified.\n    initialize = function(name, players = list()) {\n\n      self$name = name\n\n      # Initialize players and payroll.\n      for (player in players) {\n        self$payroll &lt;- self$payroll + player$market_value\n        player$team &lt;- name\n      }\n\n      self$players &lt;- players\n    },\n    \n    # Add a player to the roster.\n    sign_player = function(player) {\n      # Add the player to the team.\n      self$players &lt;- c(players, player)\n      # Update payroll.\n      self$payroll &lt;- self$payroll + player$market_value\n      # Update the player's team to be this team's name.\n      player$team &lt;- self$name\n    }\n  )\n)\n\n\nfootballer &lt;- Footballer$new(accuracy = 0.5)\nfootballer$scored_goal()\n\n[1] 1\n\n# sum(purrr::map_vec(1:10, \\(.) p$scored_goal()))\n\nWe can define a function that simulates playing a football match where the team that scores more goals wins, or a tie if teams have the same score. We track penalties received but assume they don’t have an effect on the match outcome. We assume each player gets ten chances to score a goal. We leave it to the reader as an exercise to make use of the Footballer$get_penalty_on_play() method within the game to add penalties and consequences in the game (e.g., penalty kicks or something), and to use the Team$sign_player() add more players to each roster, which should increase the mean total scores in each game based on the simple way we’ve modeled gameplay in play_match.\n\n# Define a function that models a football match.\nplay_match &lt;- function(team1, team2) {\n  \n  # Walk over each player to see how many scores they get, \n  # summing to get the total team score. \n  team1_score &lt;- sum(\n    purrr::map_vec(\n      team1$players,\n      \\(player) {\n      # Calculate the total goals scored by the current player.\n        sum(purrr::map_vec(1:10, \\(.) player$scored_goal()))\n      }\n    ) \n  )\n  \n  team2_score &lt;- sum(\n    purrr::map_vec(\n      team2$players,\n      \\(player) {\n      # Calculate the total goals scored by the current player.\n        sum(purrr::map_vec(1:10, \\(.) player$scored_goal()))\n      }\n    ) \n  )\n  \n  if (team1_score == team2_score) {\n    team1$ties &lt;- team1$ties + 1\n    team2$ties &lt;- team2$ties + 1\n    cat(\"Tie game!\\n\")\n  } else if (team1_score &gt; team2_score) {\n    cat(team1$name, \"wins!!!\\n\")\n    team1$wins &lt;- team1$wins + 1\n  } else {\n    cat(team2$name, \"wins!!!\\n\")\n    team2$wins &lt;- team2$wins + 1\n  }\n  \n  cat(team1$name, \": \", team1_score, \"   \",  \n      team2$name, \": \", team2_score, \"\\n\")\n  \n  team1$games_played &lt;- team1$games_played + 1\n  team2$games_played &lt;- team2$games_played + 1\n}\n\nFirst we need teams, which we create and to which we assign players using the constructor, Team$new() in the code below.\n\n# Initialize two teams, Whales and Squirrels, each with two\n# players. All players have identical default attributes.\nwhales &lt;- Team$new(\n  name = \"Whales\", \n  players = c(Footballer$new(), Footballer$new())\n)\nsquirrels &lt;- Team$new(\n  name = \"Squirrels\", \n  players = c(Footballer$new(), Footballer$new())\n)\n\n# Play three matches.\nplay_match(whales, squirrels)\n\nSquirrels wins!!!\nWhales :  2     Squirrels :  4 \n\nplay_match(squirrels, whales)\n\nSquirrels wins!!!\nSquirrels :  3     Whales :  2 \n\nplay_match(squirrels, whales)\n\nSquirrels wins!!!\nSquirrels :  7     Whales :  5 \n\n# Print how many games each time won.\ncat(\"\\nAfter three games...\", \"\\nThe Whales have won\", \n    whales$wins, \"games and the Squirrels have won\", squirrels$wins)\n\n\nAfter three games... \nThe Whales have won 0 games and the Squirrels have won 3",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Computational techniques for agent-based modeling</span>"
    ]
  },
  {
    "objectID": "technical-intro.html#an-aside-on-copy-vs-reference-semantics-in-r-assignment-and-mutation",
    "href": "technical-intro.html#an-aside-on-copy-vs-reference-semantics-in-r-assignment-and-mutation",
    "title": "2  Computational techniques for agent-based modeling",
    "section": "2.4 An aside on copy vs reference semantics in R: assignment and mutation",
    "text": "2.4 An aside on copy vs reference semantics in R: assignment and mutation\nWhen you change something in R, sometimes R makes a copy of the object so the original stays the same, and sometimes it changes the object by reference, meaning it updates the original directly. Understanding whether an operation creates a new copy or modifies an object in place (called mutation) is important because it affects whether you need to assign the result back to a variable or not. Even though this idea is usually taught in more advanced programming, it’s useful for beginners working with modeling and simulation because different parts of R (like data frames vs. agent-based models) follow different rules, and knowing which is which can help avoid confusing bugs.\n\n2.4.1 1. The underlying tension: how R handles object copying and modification\nAt the heart of R’s behavior lies a subtle technical distinction: whether an object is copied or modified in place when you change it. By default, R uses copy-on-modify semantics, meaning that if you change an object, R creates a new copy behind the scenes and leaves the original unchanged. This protects your data from unintended side effects and reflects R’s origins as a functional programming language for statistics. But as R evolved to support more object-oriented programming and to interface with other languages like C and C++, it introduced types of objects—such as environments, external pointers, and R6 classes—that instead use reference semantics. With these objects, changes happen directly to the object itself without making a copy. Internally, R’s i nterpreter keeps track of when it needs to copy or reuse memory, but these mechanics aren’t always visible, which can lead to surprises when working with more complex objects.\n\n\n2.4.2 2. A practical guide for navigating copy and reference semantics\nFor most core R data types—vectors, lists, data frames—you can assume that R makes a copy whenever you modify an object. But for certain kinds of objects, especially environments, R6 classes (used in socmod), and graphs from the igraph package, the behavior is different: these follow reference semantics, meaning they’re modified directly. In socmod, all models and agents are implemented using R6 classes, so when you call something like model$set_parameter(\"n_agents\", 100), the model’s state is updated directly and immediately—no need to reassign model &lt;- .... This makes working with simulations feel more natural, but it also means that habits from working with regular R objects don’t fully apply. A simple rule of thumb: if it’s an R6 object or a special object like an igraph graph, expect it to behave by reference; otherwise, expect copy-on-modify.\n\n\n2.4.3 3. How igraph fits in: working with C-backed graphs in R\nMuch of igraph isn’t written in R itself, but in another programming language called C. C allows developers to write code that’s much faster and more efficient than what’s possible in R alone. This efficiency is great for users—igraph can handle large networks quickly—but it also introduces a subtle complication to how we work with graphs in R. When you modify an igraph object, you’re actually asking C code to change the graph behind the scenes. But instead of directly changing the graph you already have, igraph’s functions usually return a new graph object with the changes applied. This means that even though igraph mostly follows reference semantics (where an object can be updated without copying everything), you still need to explicitly reassign the result of a modification to keep the updated graph. It’s different from how socmod’s models and agents work: those are built with R6 classes, which really do modify objects “in place” without needing reassignment.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Computational techniques for agent-based modeling</span>"
    ]
  },
  {
    "objectID": "technical-intro.html#agent-based-models-of-social-behavior",
    "href": "technical-intro.html#agent-based-models-of-social-behavior",
    "title": "2  Computational techniques for agent-based modeling",
    "section": "2.5 Agent-based models of social behavior",
    "text": "2.5 Agent-based models of social behavior\nHere we develop our first agent-based models of social behavior. We’ll start small, with the following four-household network of solar panel electrification using only success-biased learning (Figure 2.1). Then we’ll do a detailed comparison of different social learning strategies with different parameterizations.\n\n\n\n\n\n\nFigure 2.1: Example social network and sustainable adaptation diffusion problem.\n\n\n\nIn the example, agent 2 has adopted rooftop solar. It has some adaptive fitness, which can be thought of as the financial gain from adopting a sustainable, adaptive behavior. We can directly create the social network using igraph::make_graph() then set it as the model’s social network, along with setting the learning strategy to be contagion learning.\nThe adoption_rate parameter specifies how likely another agent is to adopt the adaptive behavior when exposed to it. The drop_rate is how likely an agent doing the adaptive behavior is to stop doing it and revert to the non-adaptive behavior.\n\n2.5.1 Example 1: Time series of adaptation diffusion\n\nadoption_rate = 0.8\n \n# Run model with \ng &lt;- igraph::make_graph(~ 1-2, 1-3, 1-4, 3-2)\nmps &lt;- make_model_parameters(\n  contagion_learning_strategy, graph = g, adoption_rate = 0.8, drop_rate = 0.1\n)\ncabm &lt;- make_abm(mps); \ncabm$get_agent(2)$set_behavior(\"Adaptive\"); \ntrial &lt;- run_trial(cabm, stop = fixated)\nplot_prevalence(trial, tracked_behaviors = c(\"Legacy\", \"Adaptive\"))\n\n\n\n\n\n\n\n\n\n# Same, but now call the adaptive behavior \"Baglowie\" instead of \"Adaptive\".\ng &lt;- igraph::make_graph(~ 1-2, 1-3, 1-4, 3-2)\nmps &lt;- make_model_parameters(\n  contagion_learning_strategy, graph = g, adoption_rate = 0.8, drop_rate = 0.1\n)\n\ncabm &lt;- make_abm(mps)\ncabm$get_agent(2)$set_behavior(\"Baglowie\"); \n\ntrial &lt;- run_trial(cabm, stop = fixated, adaptive_behavior = \"Baglowie\")\nplot_prevalence(trial, tracked_behaviors = c(\"Legacy\", \"Baglowie\"))\n\n\n\n\n\n\n\n\n\n\n2.5.2 Example: comparison of learning strategies and parameters\nAgent-based models in socmod are composed of sub-models of cognition and social behavior and social networks. One component of agent cognition is its social learning strategy. Three social learning strategies are included in socmod: success-biased, frequency-biased, and contagion learning strategies see ABM course notes for more details.\nHere we show how to compare the three learning strategies across different learning parameters. One parameter we systematically vary affects only success-biased learning, and the other we systematically vary affects only contagion learning. We will design computational experiments to understand their effects, and overall differences between the three learning strategies.\n\n# Load ggplot2 to avoid writing it during plotting below.\nlibrary(ggplot2)\n# Model generation function used in both computational experiments below.\ngen &lt;- function(model_parameter_row) {\n  \n  # Extract adaptive_fitness to create agents.\n  adaptive_fitness &lt;- model_parameter_row$adaptive_fitness\n  \n  agent_1 &lt;- socmod::Agent$new(1, behavior = \"Legacy\", \n                               fitness = 1.0, name = \"a1\")\n  agent_2 &lt;- socmod::Agent$new(2, behavior = \"Adaptive\", \n                               fitness = adaptive_fitness, name = \"a2\")\n  agent_3 &lt;- socmod::Agent$new(3, behavior = \"Legacy\", \n                               fitness = 1.0, name = \"a3\")\n  agent_4 &lt;- socmod::Agent$new(4, behavior = \"Legacy\", \n                               fitness = 1.0, name = \"a4\")\n  \n  agents &lt;- list(agent_1, agent_2, agent_3, agent_4)\n  graph &lt;- igraph::make_graph(~ 1-2, 1-3, 1-4, 3-2)\n  \n  # Extract other necessary model parameters.\n  learning_strategy &lt;- model_parameter_row$learning_strategy\n  drop_rate &lt;- model_parameter_row$drop_rate\n  adoption_rate &lt;- model_parameter_row$adoption_rate\n  \n  # Make ModelParameters to encapsulate this model's parameters.\n  model_parameters &lt;- socmod::make_model_parameters(\n    learning_strategy, graph, adaptive_fitness = adaptive_fitness, \n    adoption_rate = adoption_rate, drop_rate = drop_rate\n  )\n  \n  return (\n    socmod::make_abm(\n      model_parameters,\n      agents = agents\n    )\n  )\n}\n\n\n2.5.2.1 Experiment over adaptive fitness values\n\n# Run the adaptive fitness trials if there is not already a variable\n# name for it in the current environment. Change n_trials_per_param to\n# a small number like 2-20 for development purposes.\nif (!(\"trials_adaptive_fitness\" %in% ls(all.names = TRUE))) {\n  trials_adaptive_fitness &lt;- socmod::run_trials(\n    gen, \n    n_trials_per_param = 100,  # change to 2-20 for shorter runs\n    stop = socmod::fixated, \n    syncfile = \"trials-adaptive_fitness.RData\",\n    # overwrite = TRUE,\n    learning_strategy = c(socmod::success_bias_learning_strategy,\n                          socmod::frequency_bias_learning_strategy,\n                          socmod::contagion_learning_strategy),\n    adaptive_fitness = seq(0.8, 2.4, 0.2),\n    adoption_rate = 0.6,\n    drop_rate = 0.2\n  )\n}\n\ntrials_summary &lt;- socmod::summarise_by_parameters(\n  trials_adaptive_fitness, c(\"learning_strategy\", \"adaptive_fitness\")\n)\n\ntrials_success_rate &lt;- dplyr::filter(trials_summary, Measure == \"success_rate\")\n\nNow plot…\n\np &lt;- ggplot(trials_success_rate, \n              aes(x=adaptive_fitness, y=Value, \n                  color=learning_strategy)\n) +\n  geom_line(linewidth=1.0) + geom_point(size=2.15) +\n  ggsci::scale_color_aaas() + ggsci::scale_fill_aaas() +\n  xlab(\"Adaptive fitness\") + ylab(\"Success rate\") +\n  scale_x_continuous(breaks = sort(\n    unique(trials_summary$adaptive_fitness)\n  )) +\n  theme_classic(base_size=14) +\n  ylim(0, 1.0) +\n  guides(color = guide_legend(title = \"Learning strategy\")) +\n  ggtitle(\"Adoption rate = 0.6, drop rate = 0.2\")\n\nggsave(\"adaptive_fitness_experiment.png\", p, \n       width = 5, height = 3)\n\n\n\n\nExample computational experiment testing effect of adaptive fitness on success rate across the three learning strategies.\n\n\n\n\n2.5.2.2 Experiment over adoption rate values\n\nif (!(\"trials_adoption\" %in% ls(all.names = TRUE))) {\n  trials_adoption &lt;- socmod::run_trials(\n    gen,\n    n_trials_per_param = 100,\n    stop = socmod::fixated, \n    syncfile = \"trials-adoption-rate.RData\",\n    overwrite = TRUE,\n    learning_strategy = c(socmod::success_bias_learning_strategy,\n                          socmod::frequency_bias_learning_strategy,\n                          socmod::contagion_learning_strategy),\n    adaptive_fitness = 1.4,\n    adoption_rate = c(0.05, 0.2, 0.4, 0.6, 0.8, 1.0),\n    drop_rate = 0.2\n  )\n}\ntrials_summary &lt;- socmod::summarise_by_parameters(\n  trials_adoption, c(\"learning_strategy\", \"adoption_rate\")\n)\n\ntrials_success_rate &lt;- dplyr::filter(\n  trials_summary, Measure == \"success_rate\"\n)\n\n\np &lt;- ggplot(trials_success_rate, \n            aes(x=adoption_rate, y=Value, color=learning_strategy)) +\n  geom_line(linewidth=1.0) + geom_point(size=2.15) +\n  ggsci::scale_color_aaas() + ggsci::scale_fill_aaas() +\n  xlab(\"Adoption rate\") + ylab(\"Success rate\") +\n  scale_x_continuous(breaks = sort(unique(trials_summary$adoption_rate))) +\n  theme_classic(base_size=14) +\n  ylim(0, 1.0) +\n  guides(color = guide_legend(title = \"Learning strategy\")) +\n  ggtitle(\"Adaptive fitness = 1.4, drop rate = 0.2\")\n\nggsave(\"adoption_rate_experiment.png\", \n       p, width=5, height=3)\n\n\n\n\nExample computational experiment testing effect of adoption rate on success rate across the three learning strategies.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Computational techniques for agent-based modeling</span>"
    ]
  },
  {
    "objectID": "writing.html",
    "href": "writing.html",
    "title": "3  Writing and project development",
    "section": "",
    "text": "3.1 Steps to an article\nIt is a great feeling to close out one stage of a research project by writing in careful detail what we found, how we found it, and why it matters. But one of the most overwhelming challenges for me as a researcher, and I believe many others, is to write linear, logical, and likable research papers. One secret I’ve learned only recently is that the “writing” starts at the very beginning as one is developing a new project. This doesn’t mean that the ideas, motivations, and plan for research projects don’t change as the project goes from idea to finished product. But there must be sufficient justification and logic underlying a project’s motivation and implementation plan. For a while I’ve been familiar with the saying “great writing means great editing”, but until recently I didn’t understand that that means one must constantly be producing content (code or prose, figures, tables, etc.) and revising, reworking, recombining, and reevaluating our research products.\nGood scientific writing contextualizes our research questions and goals by introducing existing problems and solutions in a linear, logical way. The methods, results, and analyses are presented in sufficient detail so the reader can re-produce the model and analysis. Scientific results themselves must be contextualized them in terms of our research questions and explains why the model outcomes emerged as they did. Good writing finishes with a review of the findings, the model or methods that produced them, the research questions that motivated the study, the impact of the findings for the research questions and more broadly for social behavior/sustainability, for social behavioral sciences, and even for our general understanding of the universe, as appropriate.\nScientific papers share a structure that we will use as a template so one need not start from scratch, called the IMAD (or IMRaD) structure. These acronyms stand for the major section headings of research papers corresponding to the major logical divisions of the content. IMAD stands for Introduction, Model, Analysis, and Discussion, and IMRaD stands for Introduction, Methods, Results, and Discussion.\nBelow is a potentially useful strategy for initiating a new article on a computational model of social behavior. The cheat sheet guide in Figure 3.1 serves as a checklist and template for the abstract and each section. Follow these guidelines to take the guesswork out of article development and stay focused on the most important creative work: developing a computational analysis of an important social behavior system important for promoting sustainability, and communicating it clearly to your audience to maximize the impact of your work.\nYou can follow this guide as a checklist to planning, developing, and publishing scientific or policy articles that harness computational models of social behavior, perhaps transferable to related computational studies:",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Writing and project development</span>"
    ]
  },
  {
    "objectID": "writing.html#steps-to-an-article",
    "href": "writing.html#steps-to-an-article",
    "title": "3  Writing and project development",
    "section": "",
    "text": "Write the very first “draft” of the paper in the form of an Abstract + Outline. The abstract should be about 200 words or less. The Outline should be divided into the major IMAD/IMRaD sections. See Figure 3.1 for a summary.\nDevelop a model prototype, i.e., a first draft of software implementation. Then perform a preliminary analysis, i.e., some minimal visualization comparing outcomes over a set of systematically varied model parameters, i.e., input explanatory variables that affect social diffusion of adaptations or other emergent social phenomena.\nWrite a complete first draft of the paper that includes about one paragraph for every bullet point in Figure 3.1. The bullet points are intentionally unordered: in this framework, the presentation order of information is flexible and should be tailored specifically for each project. The Model section should contain tables that summarize model parameters and output measures, and describe the computational experiment design. The Analysis section should be based on the preliminary analysis, with clearly annotated scientific figures and minimal captions for each figure.\nRevise paper over several readings and small, iterative changes. Experiment with alternative visualizations. Ensure all technical terms are introduced first as prose in the Introduction, then formally in the Model section. Make sure the system is specified in sufficient detail in the Introduction so the sustainability context is clear for the reader. Make sure the reader could implement the model on their own if all they did was read the Model section.\nPublish the paper. Before sending a journal article to a journal, post code to GitHub. Write a README.md to be displayed to visitors to your GitHub project repo. The README can serve to connect the paper’s presentation of the model and analysis with the code that implemented the model analysis. If you need to anonymize your repository, for example to anonymize a paper submission, try the free tool Anonymous Github. For publishing in journals, prepare a cover letter that explains to the editors what the paper says, why it is a good fit for the journal, and suggest potential reviewers.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Writing and project development</span>"
    ]
  },
  {
    "objectID": "writing.html#appendix",
    "href": "writing.html#appendix",
    "title": "3  Writing and project development",
    "section": "3.2 Appendix",
    "text": "3.2 Appendix\nBelow we include the CSS4S authorship and acknowledgement policy. One thing I love about this work is working with other scientists. In situations where work is co-produced, it’s important to understand how our work will be recognized either in authorship or other explicit acknowledgement in published materials. In general my colleagues and I operate on the following authorship and acknowledgement policy. It states “two hours contributing to discussions” or other efforts are sufficient for authorship, plus editing of the final draft before submission. This is based on participation in roughly two brainstorming sessions.\n\n3.2.1 Authorship and Acknowledgement Policy\nFor collaborative projects such as course notes, preprints, or research papers, authorship is offered to all participants who spend at least two hours contributing to discussions about the paper or chapter, and who review or edit at least one paragraph of the final submission. Students, research assistants, and teaching assistants who meet these criteria will be listed as co-authors or credited appropriately. For any formal book or published work developed from these materials, authorship will be limited to those who contribute substantially to the conception, writing, and organization of the book as a whole. Other contributors to related projects, class notes, or supporting materials may be recognized in the acknowledgments.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Writing and project development</span>"
    ]
  },
  {
    "objectID": "diffusion.html",
    "href": "diffusion.html",
    "title": "4  Diffusion",
    "section": "",
    "text": "4.1 Primer on interventions\nFrom whom and how we learn are essential components in explaining the puzzles of diffusion and belief change that underlie the transition to more sustainable practices. In this section we will introduce models of social behavior across different agent-based model configurations. The first chapter in this section introduces a general model of the diffusion of adaptations. Next, we show how models of cooperation can help us understand and predict outcomes in environmental management problems that require stakeholders to do the same behavior, using cooperation with groundwater usage limit laws within a water district as a prototypical example. Next we will present a related behavioral puzzle, that of why certain social norms like gender norms generate inequity and inequality, and point to how modeling social behavior can help us identify potential strategies for reaching more equitable equilibriums.\nIn the context of sustainability and climate adaptation, behavior change often depends not only on individual decisions but also on the social networks through which information and behaviors spread. This chapter examines how the structure of social networks influences the diffusion of adaptations—behaviors or practices that help people adjust to new risks or environmental conditions.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Diffusion</span>"
    ]
  },
  {
    "objectID": "diffusion.html#primer-on-interventions",
    "href": "diffusion.html#primer-on-interventions",
    "title": "4  Diffusion",
    "section": "",
    "text": "Recall that a sustainability intervention is an effort to promote some sustainable behavior or set of behaviors through education, training, or other means.\nIn order to simulate interventions, we must develop a sub-model for interventions, starting with classification.\n\nOur models of interventions will not be totally disconnected from models of the social systems themselves. Intervention models will specify the expected mode of transmission hypothesized to be most important for the design of the intervention.\nIntervention models should specify the outcome variable. For now, we will use the simplest version of outcomes included by default in socmod agent-based model output.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Diffusion</span>"
    ]
  },
  {
    "objectID": "diffusion.html#comparing-seeding-strategies-for-interventions",
    "href": "diffusion.html#comparing-seeding-strategies-for-interventions",
    "title": "4  Diffusion",
    "section": "4.2 Comparing seeding strategies for interventions",
    "text": "4.2 Comparing seeding strategies for interventions\n\n4.2.1 Motivation\nWe begin with a concrete example: health behavior interventions in rural Honduran villages. In a study by Aral and Christakis, the researchers used detailed network data to test whether targeting well-connected individuals could increase the spread of health-promoting behaviors. The intervention succeeded not because it directly reached everyone, but because the network structure amplified its effects.\nThis example also serves as the foundation for an agent-based modeling assignment in which we will explain how computational experiments help us understand and predict the effect of different seeding and other intervention strategies.\nWe will close by contrasting seeding strategies that ignore social structure, as in Airoldi and Christakis (2024), with those that leverage social structure, like Turner et al. (2023).\n\n\n4.2.2 Network models and structure\nTo understand why structure matters, we explore a series of increasingly complex network models. We begin with deterministic models:\n\nRing networks, where each node is connected to a fixed number of neighbors.\nComplete networks, where every node is connected to every other node.\n\nThese help us isolate basic features like clustering and distance. We then turn to stochastic models:\n\nErdős–Rényi random networks, where links are created with fixed probability.\nWatts–Strogatz small-world networks, which combine high local clustering with occasional long-range ties.\n\nThe small-world model captures key features of real-world social networks: short average path lengths and local clustering. Examples from the original Watts and Strogatz paper—such as the U.S. power grid and the C. elegans neural network—illustrate how widespread these features are.\nAn unintuitive feature of many social networks is the friendship paradox: on average, your friends have more friends than you do. This emerges because well-connected individuals are more likely to appear in others’ networks. It affects who sees new behaviors early, who is most influential, and how we interpret network data. We include a visualization to illustrate this dynamic and emphasize the importance of precise language.\n\n\n4.2.3 From structure to simulation\nAgent-based models help us represent complexity by formalizing how cognition and social structure interact. Each component is modeled separately. Cognition refers to the processes agents use to evaluate and adopt behaviors—drawing on existing knowledge, experience, and social feedback. Social structure refers to constraints on who interacts with whom, shaped by acquaintanceship, geography, institutions, and chance. We model social structure as a network: a graph where nodes represent individuals and edges represent relationships through which information or influence can flow.\nWe design our simulations to evaluate different intervention strategies based on cognitive factors we deem most important, with social structure that is “good enough” for representing a real-world system. by vary which agents start with a given behavior or belief, a process often called seeding. For example, in a diffusion model, we might seed a behavior with the most connected individuals, a randomly selected group, or individuals located in a particular community. These differences allow us to explore how network structure interacts with initial conditions to shape diffusion outcomes—helping us identify strategies that are more robust, equitable, or efficient.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Diffusion</span>"
    ]
  },
  {
    "objectID": "diffusion.html#the-general-diffusion-model",
    "href": "diffusion.html#the-general-diffusion-model",
    "title": "4  Diffusion",
    "section": "4.3 The general diffusion model",
    "text": "4.3 The general diffusion model\n\nCognition: how agents evaluate new behaviors;\nSocial behavior: how agents learn from others and adopt behaviors;\nNetwork structure: who interacts with whom.\n\nThese components are modular, allowing us to isolate the effects of structure while holding behavior constant.\nMODEL SKETCH HERE OF GENERAL DIFFUSION MODEL\n\nBehavior choice and learning\nGroup and social structure\nOutcome measure: simulated success rate\n\nThis flexible framework will carry through the rest of the course. In the next section, we extend this model to explore how homophily, asymmetry, and structural inequality affect adaptation outcomes.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Diffusion</span>"
    ]
  },
  {
    "objectID": "diffusion.html#network-structure-patterns-that-shape-and-constrain-adaptation",
    "href": "diffusion.html#network-structure-patterns-that-shape-and-constrain-adaptation",
    "title": "4  Diffusion",
    "section": "4.4 Network structure patterns that shape and constrain adaptation",
    "text": "4.4 Network structure patterns that shape and constrain adaptation\n\n4.4.1 The good and the bad of social structure and long-range ties\n\n\n4.4.2 Homophily: choice and induced\nHomophily is the tendency for similar individuals to associate. We distinguish two forms:\n\nChoice homophily, where individuals actively prefer similar partners;\nInduced homophily, where external constraints (e.g., institutions, geography) create segregation even without conscious preference.\n\nTwo empirical illustrations:\n\nAn analysis of remote-work-eligible occupations shows clustering by education, income, and race.\nA study of minority students in a mostly white MBA program finds that homophily can foster solidarity and resilience.\n\nThese examples show that homophily can inhibit or support adaptation, depending on the context.\nWe also discuss experimental results from Centola (2010, 2011), which show that homophilous networks can outperform random ones in spreading health behaviors—especially when reinforcement and social learning are important.\n\n\n4.4.3 Asymmetric homophily and diffusion\nIn some cases, homophily is asymmetric. One group (often the minority) is more exposed to the other than vice versa. In the “Minority Incubator, Majority Reservoir” model, this asymmetry allows minority-originating adaptations to diffuse outward more effectively.\nThis structural asymmetry isn’t necessarily intentional—it can emerge from how connections are formed. Yet it has real implications for diffusion, visibility, and adaptation speed.\n\n\n4.4.4 Core-periphery structure\nIn a core-periphery network, a dense core of well-connected individuals is surrounded by a sparsely connected periphery. This structure supports fast diffusion through the core but may limit peripheral influence.\nThe South Pacific Island case provides an example: core-periphery organization enabled stable adaptation strategies under conditions of uncertainty and risk. These designs may emerge deliberately or organically.\n\n\n4.4.5 When ties break: cumulative loss\nTo illustrate the consequences of broken connections, we turn to Henrich’s study of tool diversity in Oceania. When long-range maritime ties between islands broke down, isolated communities lost complex technologies.\nThis example highlights how network fragmentation can halt or reverse cumulative cultural evolution—a key dynamic in adaptation and innovation.\n\n\n4.4.6 Modeling implications\nUsing the same agent-based model, we simulate diffusion on homophilous and core-periphery networks. Holding cognition and social behavior constant, we find:\n\nSome structures accelerate diffusion;\nSome amplify inequality in who adopts adaptations;\nSome slow or block spread entirely.\n\nThese outcomes underscore the importance of network design in policy, development, and sustainability work.\n\n\n\n4.4.7 Conclusion\nTo promote the spread of sustainable behavior we need to understand how behavior\nBehaviors diffuse between people through social learning. But social structure, the benefit of adaptive behaviors, individual stubbornness, and ingroup preference all affect whether adaptive behaviors become prevalent.\n\n\n\n\nAiroldi, Edoardo M., and Nicholas A. Christakis. 2024. “Induction of social contagion for diverse outcomes in structured experiments in isolated villages.” Science 384 (6695). https://doi.org/10.1126/science.adi5147.\n\n\nTurner, Matthew A., Alyson L. Singleton, Mallory J. Harris, Ian Harryman, Cesar Augusto Lopez, Ronan Forde Arthur, Caroline Muraida, and James Holland Jones. 2023. “Minority-group incubators and majority-group reservoirs support the diffusion of climate change adaptations.” Philosophical Transactions of the Royal Society B: Biological Sciences 378 (1889). https://doi.org/10.1098/rstb.2022.0401.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Diffusion</span>"
    ]
  },
  {
    "objectID": "cooperation.html",
    "href": "cooperation.html",
    "title": "5  Cooperation by example of sustainable groundwater management",
    "section": "",
    "text": "todo: transfer cooperation standalone project shared via canvas with class",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Cooperation by example of sustainable groundwater management</span>"
    ]
  },
  {
    "objectID": "unfairness.html",
    "href": "unfairness.html",
    "title": "6  Modeling the origins of persistent gender inequality",
    "section": "",
    "text": "6.1 Introduction\nIn the United States, the gender pay gap has narrowed, but even highly-trained female professionals continue to shoulder more household and childcare demands than their husbands. This follows an unfortunate general trend in the United States elsewhere: gender equality has proceeded in fits and starts. Women could not vote until the 19th Amendment became law in the United States (history, timeline); in Brazil, the other large democracy of the Americas, women could not vote until 1932. Here I introduce a agent-based social behavior model of bargaining for the division of household labor. Simulated people (i.e., agents) have one of two genders and different employment levels. This model generates the emergence of social norms with different amounts of social “inertia” that maintain gender inequality in household chore demands. We can use this model to predict how various social factors affect the efficacy of interventions to promote equality in the division of household chores. We show here how the model can be used to calculate the relative difference in effort required to change household chore norms depending on, e.g., the initial strength of the norm, the underlying social network that structures male-female partner selection, and individual-level variation in stubbornness or other cognitive traits. This approach is important because it provides a mechanistic explanation of how these, and other norms for inequality, emerge and persist, and provides a testbed strategy to help identify the most theoretically effective strategies to achieve real-world progress.\nDespite progress towards equal pay for equal work and equal opportunities for women, even high-achieving women find themselves disproportionately shouldering cleaning, organizational, and childrearing chores: “I am the mom who does all the things. I do a majority of parenting, a majority of household management…I pay our bills on time, I deal with our car, I deal with sht when it breaks…I pick up his laundry, I pick up his prescriptions, I remind him about doc appointments,” says a professor on a “Facebok page dedicated to mothers in academia.” This post comes from a popular article on this subject by Cailin O’Connor, Chancellor’s Professor in the Department of Logic and Philosophy of Science at UC Irvine, “Gendered Division of Labor Served a Purpose. To Make Progress, Don’t Erase It. Replace It.” Prof. O’Connor is also a computational scientist who has applied her training in logic and philosophy to address a number of pressing issues: here we focus on presenting the model and analysis presented in her book on the Origins of Unfairness* (O’Connor 2019a), framed in terms of the UN Sustainable Development Goals with the models developed in socmod. We summarize selections of the book to distill it for our purposes in promoting sustainable outcomes, which necessarily are equitable, just, and fair outcomes across gender or any other social categories.\nTheoretically, division of labor exists to multiply efforts contributed by two or more people working together, whether division is based on gender or other group marker (e.g., certifications indicating expertise in skilled labor, job title, company, etc.). However, if the bonus spoils gained from dividing labor are shared unequally in a majority of couples in a population, that population may develop a social norm, i.e., a heuristic “cognitive shortcut” for deciding how labor should be divided that can be difficult to change due to cognitive effects like biased assimilation or belief repulsion that can cause individuals to ignore or retreat from new ways of doing things, even if they can somehow be shown to be objectively better. Deciding who does which type of labor and how much they receive from different divisions of labor is a type of coordination problem, just as cooperation was in the previous chapter. Extra value can be gained when behaviors complement one another, unlike cooperation, where extra value can be gained when people do the same behavior as one another. We therefore call it a complementary coordination problem. We therefore can apply the same evolutionary game theory approach to household division of labor as we used in our spatial model of sustainable groundwater cooperation in the previous chapter.\nIn mixed-gender household bargaining, we assume that domestic partners divide labor along two dimensions: how much effort each partner should put towards working a job outside the home and how much effort to devote to household chores. Let’s start with a simpler example of gendered complementary coordination to illustrate the model: partner dance. When women and men partner up for a dance, they need not deliberate and decide who will lead and follow before the music starts (O’Connor 2019a). The cultural norm that “women follow” is a heuristic that does the thinking for them. We can develop a computational model of this as a coordination problem and watch social norms emerge as we did for cooperation. However, in our model where two genders serve as group markers, it will be equally likely for a cultural norm to emerge where women lead as for men. Something extra is required to break the symmetry, which we will add in two ways in our model. First, in a partner dance, even today a man may face some ridicule or would at least feel uncomfortable if they were to repetitiously assume the role of follower in a dance. Men learning from the experience of other men would be loathe to change their behavior if they observe other men suffering from such a choice. The other way we will vary the game is to assign some likelihood that men would at least sometimes choose to not dance at all if a potential female partner insisted on leading, which is also not difficult to imagine in the real world.\n“Nearly every society uses gender as a tool to divide household labor,” explains Prof. O’Connor in her popular magazine article (O’Connor 2019b), though “there are different rules for how it works.” In addition to norms for who leads a dance, some similar norms “[i]n recent Western history” include that “women clean clothes, men hunt, women cook, men plough, women take care of young children, men build houses, and so on,” writes O’Connor. Norms for specialization facilitate greater family efficiency when “[l]ittle girls could learn to do the labor expected of women, and little boys the labor expected of men.” O’Connor notes that in a more subsistence form of existence where, for example, clothes and furniture must be made at home, it is not reasonable to expect one person to know how “to change wool into a sweater or to build a bed using just whittling tools and wood.” It seems that even hetero couples who agree they’d like to buck traditional norms find it difficult to achieve in practice, especially when stress piles up, and people’s brains default to culturally-specified norms without concerted effort.\nSadly, historically and up to today in too many situations, men make more than women from working a job and men regularly use threats of domestic violence or divorce that are not available to women in the same way, especially if a woman must arrange and pay for childcare in households with children. This is a darker version of the dance partner game, but the structure is the same. If a man works a well-paying job, this may seem preferable to both partners. However, men may use threats to control and benefit more from extra earnings, while doing little to no housework. Even if new legal remedies exist to protect women, such as no-fault divorce, child support laws, restraining orders, and taking guns away from domestic violence perpetrators, when men and women look to others to who does what in a household, the effects of past inequity, abuse, and coercion can live on. This is true even if women also attain gender pay equity, a testament to the hidden power of cultural inheritance.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Modeling the origins of persistent gender inequality</span>"
    ]
  },
  {
    "objectID": "unfairness.html#introduction",
    "href": "unfairness.html#introduction",
    "title": "6  Modeling the origins of persistent gender inequality",
    "section": "",
    "text": "6.1.1 Model and analysis outline\nTo understand how wage freedom can be improved for women, we will develop a coordination game model of household bargaining. The economic behavior of women and men agents in domestic partnerships is represented by the effort level for working a Job, which we’ll call \\(l_J\\) and effort level for domestic Chores, which we’ll call \\(l_C\\). Altogether this model will be a steep increase in model complexity compared to the groundwater cooperation model. Therefore we begin with a simpler toy model of the Partner Dance game that has a similar vibe in that it analyzes how social norms affect , but only adds the complexity of gender group identities. In this model of the gendered division of labor, payoffs are gained through between-gender interaction. However women learn from women and men from men, i.e., social learning proceeds within gender groups and not between.\n\n6.1.1.1 Deviance sanctions for men who follow\nIn partner dancing between men and women, men typically lead by taking the first step forward and initiating other moves. Why is this? One reason is that this social norm saves dance partners from having to deliberate and decide who will lead the dance. Of course, if two women or two men partner dance, they would have to decide who would lead since the social norm does not apply, unless they have some alternative pre-arranged norm or agreement between themselves. A satisfying partner dance, then, only depends on one partner leading and one following.\n\nWe ask in this toy analysis: how likely is it that men agree to Follow in a simulated population of agents, given the level of social sanctioning levied against men who Follow?\nWe will develop a representation of the payoff matrix that is given with two values in each entry, with the first corresponding to a Woman focal agent and the second corresponding to a Man.\nWe will systematically vary the deviance penalty representing the magnitude of sanction received by men who Follow in populations with different initial prevalence of male followers to answer our toy research question.\n\n\n\n6.1.1.2 Achieving fairness\n\nIn our household bargaining model, we again represent payoffs in matrix form where genders interact to gain payoffs. Their payoffs are stylized as resulting from successful household bargaining that maintains a sufficient levels of both Job and Chore effort, representing work within and outside the home, which has resulted in men having more household wage freedom, meaning they benefited more from Job-Chore divisions of labor than women, even though the couple have worked equally hard to provide a nurturing home with enough money.\nWe propose that it is possible women have their own personal bonus if they have high Job effort and partner with a man with high Chores effort, which we call \\(\\omega\\). We could investigate how different values of \\(\\omega\\) affect the probability of escaping met. Perhaps if women organize together to somehow increase \\(\\omega\\), this could convince more Men to accept equal wage freedom. As Cailin O’Connor quotes Frederick Douglas, “Power concedes nothing without a demand”. This analysis, then, could tell us how great a demand is required for that concession.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Modeling the origins of persistent gender inequality</span>"
    ]
  },
  {
    "objectID": "unfairness.html#model",
    "href": "unfairness.html#model",
    "title": "6  Modeling the origins of persistent gender inequality",
    "section": "6.2 Model",
    "text": "6.2 Model\n\n6.2.1 Model dynamics overview\n\n6.2.1.1 Initialization\n\nComplete social network to start\ngenders randomly set, so agents won’t have the same number of same- and opposite-gender neighbors as one another\nIn the Partner Dance game, set the deviance penalty \\(\\delta\\) and an initial fraction of men as followers to see what initial support for bucking the norm can overcome what penalty.\nIn the Wage Freedom game, set some initial machismo, \\(m\\), that represents the machismo multiple that scales the prevalence of Men agents with \\(l_J\\) = High compared to its value if it levels were set We will similarly disproportionately set the initial prevalence of Women agents with \\(l_C\\) = High to be \\(m\\) times what it would be at random. There are \\(N/2\\) agents of each gender, and three effort levels for Job or Chore. If agents were randomly assigned then the number of agents of either gender putting forth each effort level would be \\(\\frac{N}{2}\\frac{1}{3} = \\frac{N}{6}\\).\n\n\n\n\n6.2.2 Gendered payoff matrices\nPayoff matrices are more complicated in gendered division of labor problems compared to the spatial cooperation problem of the previous chapter. They are read as follows: the row labels indicate the behavior of the focal agent. If the focal agent is a woman, her payoff can be read from the matrix by finding her behavior among the row labels, e.g., Lead or Follow in the Partner Dance game, then finding her man partner’s behavior among the column labels\n\n\n6.2.3 Partner dance\n\nIf there is no social sanction for men this means there is no deviance penalty, i.e., \\(\\delta = 0\\). When \\(\\delta \\geq 0\\), then men suffer some judgement for choosing to follow a woman.\n\n\n6.2.3.1 Payoff matrix\n\n\n\nTable 6.1\n\n\nPartner Dance payoff matrix. Women enjoy dancing equally whether they lead or follow. Men who follow are sanctioned, however, paying a penalty \\(-\\delta\\) when they follow.\n\n\n\n\n\nPartner (Man, Woman)\n\n\n\n\nFocal (Woman, Man)\n\n\nLead\n\n\nFollow\n\n\n\n\nLead\n\n\n\\(0, 0\\)\n\n\n\\(1, 1\\)\n\n\n\n\nFollow\n\n\n\\(1, 1 - \\delta\\)\n\n\n\\(0, 0\\)\n\n\n\n\n\n\n\n\n6.2.3.2 Computational experiment: Gender Norm Inversion\n\nTry a few values of \\(\\delta \\in {0.0, 0.1, 0.4}\\) and track the fraction of Men who Follow at equilibrium. The key variable is \\(I \\in [0, 1]\\), the initial proportion of people who invert the social norm that “men lead in partner dance.” That means \\(I\\) sets both the starting fraction of Men who Follow and Women who Lead — a tidy way to dial in the level of role inversion.\nObserve the prevalence dynamics and \\(t=50\\) prevalence outcomes prevalence of Men who Follow and Women who Lead at \\(t=50\\) model time steps.\n\n\n\n\n6.2.4 Achieving fairness\n\n6.2.4.1 Payoff matrix\n\n\n\nTable 6.2\n\n\nWage Freedom payoff matrix. In the upper left, households are unstable (payoffs all zero) because together they have a low combined Job effort. The bottom right are unstable because of low combined Chores effort level.\n\n\n\n\n\nPartner (Woman, Man)\n\n\n\n\nFocal (Woman, Man)\n\n\n\\(l_J =\\) Scant,\\(l_C =\\) High\n\n\nMed, Med\n\n\nHigh, Scant\n\n\n\n\nScant, High\n\n\n\\(0, 0\\)\n\n\n\\(0, 0\\)\n\n\n\\(1, 1 + \\mu\\)\n\n\n\n\nMed, Med\n\n\n\\(0, 0\\)\n\n\n\\(1 + \\varepsilon, 1 + \\varepsilon\\)\n\n\n\\(0, 0\\)\n\n\n\n\nHigh, Scant\n\n\n\\(1 + \\omega, 1\\)\n\n\n\\(0, 0\\)\n\n\n\\(0, 0\\)\n\n\n\n\n\n\n\n\n6.2.4.2 Computational experiment: Escape from Unfairness\n\nTo simplify things to start, set \\(\\mu = \\omega = 0.0\\) and only allow women to have a Job effort level \\(l_J =\\) Scant or Medium and men to have a Job effort level of Medium or High. Vary the equality bonus over \\(\\varepsilon\\in\\{0.0,0.1,\\ldots,0.8\\}\\), or something like that. This represents the case where Women are allowed Scant, if any, opportunities to work outside the home if their Men partners have a High effort level for a Job outside the home. This approach allows us to explore how much greater the personal benefit of an equitable arrangement must be for some level of societal machismo, which we represent by \\(m\\), a number that scales the initial prevalence beyond chance of Men with High effort level in a Job and the initial prevalence of Women with High effort level in Chores.\nWe will observe the Success Rate of guiding the simulated population towards equilibrium in the equitable, symmetric effort state where both Woman and Man put Medium effort levels in to a Job and household Chores.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Modeling the origins of persistent gender inequality</span>"
    ]
  },
  {
    "objectID": "unfairness.html#analysis",
    "href": "unfairness.html#analysis",
    "title": "6  Modeling the origins of persistent gender inequality",
    "section": "6.3 Analysis",
    "text": "6.3 Analysis",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Modeling the origins of persistent gender inequality</span>"
    ]
  },
  {
    "objectID": "unfairness.html#discussion",
    "href": "unfairness.html#discussion",
    "title": "6  Modeling the origins of persistent gender inequality",
    "section": "6.4 Discussion",
    "text": "6.4 Discussion",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Modeling the origins of persistent gender inequality</span>"
    ]
  },
  {
    "objectID": "unfairness.html#references",
    "href": "unfairness.html#references",
    "title": "6  Modeling the origins of persistent gender inequality",
    "section": "6.5 References",
    "text": "6.5 References",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Modeling the origins of persistent gender inequality</span>"
    ]
  },
  {
    "objectID": "unfairness.html#appendix",
    "href": "unfairness.html#appendix",
    "title": "6  Modeling the origins of persistent gender inequality",
    "section": "6.6 Appendix",
    "text": "6.6 Appendix\n\n\n\n\nO’Connor, Cailin. 2019a. The Origins of Unfairness. Oxford: Oxford University Press.\n\n\n———. 2019b. “Gendered Division of Labor Served a Purpose. To Make Progress, Don’t Erase It. Replace It.” Behavioral Scientist, December. https://behavioralscientist.org/gendered-division-of-labor-served-a-purpose-to-make-progress-dont-erase-it-replace-it/.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Modeling the origins of persistent gender inequality</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Airoldi, Edoardo M., and Nicholas A. Christakis. 2024. “Induction of social contagion for diverse outcomes in\nstructured experiments in isolated villages.”\nScience 384 (6695). https://doi.org/10.1126/science.adi5147.\n\n\nAlongi, Daniel M. 2002. “Present state and\nfuture of the world’s mangrove forests.” Environmental\nConservation 29 (3): 331–49. https://doi.org/10.1017/S0376892902000231.\n\n\nCikara, Mina, and Jay J. Van Bavel. 2014. “The Neuroscience of Intergroup Relations: An Integrative\nReview.” Perspectives on Psychological Science 9\n(3): 245–74. https://doi.org/10.1177/1745691614527464.\n\n\nDeffner, Dominik, Natalia Fedorova, Jeffrey Andrews, and Richard\nMcElreath. 2024. “Bridging theory and data: A\ncomputational workflow for cultural evolution.”\nProceedings of the National Academy of Sciences of the United States\nof America 121 (48): 1–11. https://doi.org/10.1073/pnas.2322887121.\n\n\nEhret, Sönke, Sara M. Constantino, Elke U. Weber, Charles Efferson, and\nSonja Vogt. 2022. “Group identities can\nundermine social tipping after intervention.” Nature\nHuman Behaviour. https://doi.org/10.1038/s41562-022-01440-5.\n\n\nEisenberg, Cristina, Christopher L. Anderson, Adam Collingwood, Robert\nSissons, Christopher J. Dunn, Garrett W. Meigs, Dave E. Hibbs, et al.\n2019. “Out of the Ashes: Ecological\nResilience to Extreme Wildfire, Prescribed Burns, and Indigenous Burning\nin Ecosystems.” Frontiers in Ecology and\nEvolution 7 (November): 1–12. https://doi.org/10.3389/fevo.2019.00436.\n\n\nHenrich, Joseph. 2015. The secret of our\nsuccess. Princeton University Press.\n\n\nJones, James Holland, Elspeth Ready, and Anne C. Pisor. 2021.\n“Want climate-change adaptation? Evolutionary\ntheory can help.” American Journal of Human\nBiology 33 (4): 1–17. https://doi.org/10.1002/ajhb.23539.\n\n\nKolden, Crystal A. 2019. “We’re not doing\nenough prescribed fire in the western united states to mitigate wildfire\nrisk.” Fire 2 (2): 1–10. https://doi.org/10.3390/fire2020030.\n\n\nMalekpour, Shirin, Cameron Allen, Ambuj Sagar, Imme Scholz, Åsa Persson,\nJaime J. Miranda, Therese Bennich, et al. 2023. “What scientists need to do.”\nNature 621 (September): 250–54.\n\n\nMcNamara, Karen E., Rachel Clissold, Ross Westoby, Annah E.\nPiggott-McKellar, Roselyn Kumar, Tahlia Clarke, Frances Namoumou, et al.\n2020. “An assessment of community-based\nadaptation initiatives in the Pacific Islands.” Nature\nClimate Change 10 (7): 628–39. https://doi.org/10.1038/s41558-020-0813-1.\n\n\nMilzman, Jesse, and Cody Moser. 2023. “Decentralized core-periphery structure in social networks\naccelerates cultural innovation in agent-based model.” In\nProc. Ofthe 22nd International Conference on Autonomous Agents and\nMultiagent Sys- Tems (AAMAS 2023). http://arxiv.org/abs/2302.12121.\n\n\nNalau, Johanna, Susanne Becken, Johanna Schliephack, Meg Parsons, Cilla\nBrown, and Brendan Mackey. 2018. “The role of\nindigenous and traditional knowledge in ecosystem-based adaptation: A\nreview of the literature and case studies from the Pacific\nIslands.” Weather, Climate, and Society 10 (4):\n851–65. https://doi.org/10.1175/WCAS-D-18-0032.1.\n\n\nO’Connor, Cailin. 2019a. The Origins of\nUnfairness. Oxford: Oxford University Press.\n\n\n———. 2019b. “Gendered Division of Labor\nServed a Purpose. To Make Progress, Don’t Erase It. Replace\nIt.” Behavioral Scientist, December. https://behavioralscientist.org/gendered-division-of-labor-served-a-purpose-to-make-progress-dont-erase-it-replace-it/.\n\n\nPearson, Jasmine, Karen E. McNamara, and Patrick D. Nunn. 2020.\niTaukei Ways of Knowing and Managing Mangroves\nfor Ecosystem-Based Adaptation. Springer International\nPublishing. https://doi.org/10.1007/978-3-030-40552-6_6.\n\n\nPiggott-McKellar, Annah E, Patrick D Nunn, Karen E McNamara, and Seci T\nSekinini. 2020. “Dam(n) Seawalls: A Case of\nClimate Change Maladaptation in Fiji.” In Managing\nClimate Change Adaptation in the Pacific Region, edited by W. Leal\nFilho, 69–84. Springer. https://doi.org/10.1007/978-3-030-40552-6.\n\n\nReady, Elspeth, and Eleanor A. Power. 2018. “Why wage earners hunt: Food sharing, social structure,\nand influence in an arctic mixed economy.” Current\nAnthropology 59 (1): 74–97. https://doi.org/10.1086/696018.\n\n\nRombach, M. Puck, Mason A. Porter, James H. Fowler, and Peter J. Mucha.\n2014. “Core-periphery structure in\nnetworks.” SIAM Journal on Applied Mathematics 74\n(1): 167–90. https://doi.org/10.1137/120881683.\n\n\nSmaldino, Paul E, Marco A Janssen, Vicken Hillis, Jenna Bednar, Paul E\nSmaldino, Marco A Janssen, Vicken Hillis, and Jenna Bednar. 2017.\n“Adoption as a social marker: Innovation\ndiffusion with outgroup aversion.” The Journal of\nMathematical Sociology 41 (1): 26–45. https://doi.org/10.1080/0022250X.2016.1250083.\n\n\nSwette, Briana, Lynn Huntsinger, and Eric F. Lambin. 2023. “Collaboration in a polarized context: lessons from public\nforest governance in the American West.” Ecology and\nSociety 28 (1). https://doi.org/10.5751/ES-13958-280129.\n\n\nTurner, Matthew A., Alyson L. Singleton, Mallory J. Harris, Ian\nHarryman, Cesar Augusto Lopez, Ronan Forde Arthur, Caroline Muraida, and\nJames Holland Jones. 2023. “Minority-group\nincubators and majority-group reservoirs support the diffusion of\nclimate change adaptations.” Philosophical\nTransactions of the Royal Society B: Biological Sciences 378\n(1889). https://doi.org/10.1098/rstb.2022.0401.\n\n\nUnited Nations. 2023. “Times of crisis, times\nof change: Science for accelerating transformations to sustainable\ndevelopment.” https://sdgs.un.org/sites/default/files/2023-09/FINAL\nGSDR 2023-Digital -110923_1.pdf.\n\n\nVan Bavel, Jay J, Dominic J Packer, and William A Cunningham. 2008.\n“The Neural Substrates of In-Group\nBias.” Psychological Science 19 (11): 1131–39.\n\n\nWitt, Alexandra, Wataru Toyokawa, Kevin N. Lala, Wolfgang Gaissmaier,\nand Charley M. Wu. 2024. “Humans flexibly\nintegrate social information despite interindividual differences in\nreward.” Proceedings of the National Academy of\nSciences 121 (39). https://doi.org/10.1073/pnas.2404928121/-/DCSupplemental.Published.",
    "crumbs": [
      "References"
    ]
  }
]